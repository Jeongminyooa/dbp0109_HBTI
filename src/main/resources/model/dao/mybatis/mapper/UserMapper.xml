<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="model.dao.mybatis.mapper.UserMapper">
	<cache />
	<!-- SQL statement, parameter/result mapping 정의 -->

	<!-- CREATE user -->
	<insert id="insertUser" parameterType="User">
		INSERT INTO UserInfo
		(user_id, password, name, descr, image)
		VALUES (#{user_id},
		#{password}, #{name}, #{descr, jdbcType=VARCHAR},
		#{image,
		jdbcType=VARCHAR})
	</insert>

	<!-- Login 시간 갱신 -->
	<update id="updateLoginDate" parameterType="String">
		UPDATE UserInfo
		SET
		login_date = sysdate
		WHERE user_id = #{user_id}
	</update>

	<!-- Update User Info -->
	<update id="updateUser" parameterType="User">
		UPDATE UserInfo
		SET
		password=#{password}, name=#{name}, descr=#{descr, jdbcType=VARCHAR},
		image=#{image, jdbcType=VARCHAR}
		WHERE user_id = #{user_id}
	</update>

	<!-- Delete Group 해당 그룹에 속한 모든 유저의 그룹 정보를 삭제 -->
	<update id="deleteGroup" parameterType="int">
		UPDATE UserInfo
		SET
		group_id = null
		WHERE group_id = #{group_id}
	</update>

	<!-- Quit Group 해당 유저는 그룹을 탈퇴 -->
	<update id="quitGroup" parameterType="String">
		UPDATE UserInfo
		SET group_id
		= null
		WHERE user_id = #{user_id}
	</update>

	<!-- Update User's GroupInfo -->
	<update id="updateUserGroup">
		UPDATE UserInfo
		SET group_id = #{group_id}
		WHERE user_id
		= #{user_id}
	</update>

	<!-- Update HBTI -->
	<update id="updateHBTI">
		UPDATE UserInfo
		SET hbti_id = #{hbti_id}
		WHERE user_id =
		#{user_id}
	</update>

	<!-- Delete User -->
	<delete id="deleteUser" parameterType="String">
		DELETE <include refid="userInfo_fragment"/>
	</delete>
	
	<!-- Fragment -->
	<sql id="userInfo_fragment">
		FROM UserInfo
		WHERE user_id = #{user_id}
	</sql>
	
	<!-- 해당 유저가 존재하는지 확인 -->
	<select id="existingUser" parameterType="String"
		resultType="int">
		SELECT COUNT(*)
		<include refid="userInfo_fragment"/>
	</select>

	<!-- 해당 유저가 그룹에 속해있는지 확인 -->
	<select id="existingGroup" parameterType="String"
		resultType="int">
		SELECT NVL(group_id, 0) as group_id
		<include refid="userInfo_fragment"/>
	</select>

	<!-- 해당 유저의 정보 반환 -->
	<select id="selectUserByUserId" parameterType="String"
		resultType="User">
		SELECT password, name, descr, image, NVL(group_id, 0) AS
		group_id, hbti_id
		<include refid="userInfo_fragment"/>
	</select>

	<!-- 해당 유저가 Todo를 완료한 날짜 select -->
	<select id="selectTodoListByUserId" resultType="String">
		SELECT
		TO_CHAR(todo_date, 'yyyy-mm-dd') AS todo_date
		FROM Todo
		WHERE user_id =
		#{user_id}
		AND is_done=1
	</select>

	<!-- 해당 유저가 Challenge를 완료한 날짜 select -->
	<select id="selectChallengePostListByUserId" resultType="String">
		SELECT
		TO_CHAR(write_date, 'yyyy-mm-dd') AS write_date
		FROM ChallengePost
		WHERE writer_id = #{user_id}
	</select>





</mapper>